g <- ggplot(dataset, aes(depth, price))
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_poin(alpha=1/3)
g + geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length.out=4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha=1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha=1/3) + facet_grid(cut~car2) + geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat,price)) + geom_boxplot() + facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(wigth~Time | Diet, BodyWeight)
xyplot(weigth~Time | Diet, BodyWeight)
xyplot(weight~Time | Diet, BodyWeight)
library(datasets)
data("airquality")
data(airquality)
qplot(Wind, Ozone, data=airquality)
qplot(Wind, Ozone, data=airquality, facets=.~factor(Month))
airquality <- transform(airquality, Month=factor(Month))
qplot(Wind, Ozone, data=airquality, facets=.~Month)
?splom
?par
?print.trellis
?trellis.par.set
?splom
q()
library(lattice)
data()
data("cars")
str(cars)
bwplot(cars$speed)
bwplot(speed)
bwplot(speed, data=cars)
?xyplot
bwplot(speed, data=cars)
xyplot(speed, data=cars)
xyplot(speed, dist, data=cars)
xyplot(speed~dist, data=cars)
bwplot(speed~dist, data=cars)
bwplot(dist~speed, data=cars)
bwplot(speed~dist, data=cars)
stripplot(speed~dist, data=cars)
bwplot(speed~dist, data=cars)
bwplot(speed~., data=cars)
bwplot(speed~, data=cars)
bwplot(speed, data=cars)
bwplot(~speed, data=cars)
bwplot(~dist, data=cars)
stripplot(~dist, data=cars)
bwplot(~dist, data=cars)
set.seed(1234)
par(mar=c(0,0,0,0))
x <- rnorm(12, mean=rep(1:3, each=4), sd=0.2)
rep(1:3, each=4)
y <- rnorm(12, mean=rep(c(1,2,1), each=4), sd=0.2)
plot(x, y, col="blue", pch=19, cex=2)
text(x+, y+, labels=as.character(1:12)
text(x+0.05, y+0.05, labels=as.character(1:12)
)
dataFrame <- data.frame(x=x, y=y)
dist(dataFrame)
distxy <- dist(dataFrame)7
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
par(mar=c(4,4,2,2))
plot(hClustering)
par(mar=c(2,4,2,2))
plot(hClustering)
par(mar=c(3,4,2,2))
plot(hClustering)
par(mar=c(4,4,2,2))
plot(hClustering)
par(mar=c(5,4,2,2))
plot(hClustering)
heatmap(dataFrame)
heatmap(as.matrix(dataFrame))
par(mar=c(4,4,2,2))
kmeansObj <- kmeans(dataFrame, centers=3)
names(kmeansObj)
kmeansObj$clister
kmeansObj$cluster
plot(x, y, col=kmeanObj$cluster, pch=19, cex=2)
plot(x, y, col=kmeansObj$cluster, pch=19, cex=2)
points(kmeansObj$centers, col=1;3, pch=3, cex=3, lwd=3)
points(kmeansObj$centers, col=1:3, pch=3, cex=3, lwd=3)
q()
colors()
?smoothScatter
x <- rnorm(10000)
y <- rnorm(10000)
plot(x, y)
smoothScatter(x, y)
par(mfrow=c(1,2))
plot(x, y)
smoothScatter(x, y)
windows()
par(mfrow=c(1,2))
plot(x, y)
smoothScatter(x, y)
dev.cur()
devices()
?dev.cur
dev.list()
dev.off()
dev.list()
?rgb
rgb(1,0,1)
rgb(0.9,0,1)
rgb(2,0,1)
rgb(255,0,1)
windows()
par(mfrow=c(1,2))
plot(x, y, col=rgb(0,0,0,0.5))
plot(x, y, col=rgb(0,0,0,0.5), pch=19)
plot(x, y, col=rgb(0,0,0,0.2), pch=19)
plot(x, y, col=rgb(0,0,0,0.2), pch=19, cex=5)
plot(x, y, col=rgb(0,0,0,0.2), pch=19, cex=2)
plot(x, y, col=rgb(0,0,0,0.2), pch=19, cex=1.6)
plot(x, y, col=rgb(0,0,0,0.2), pch=19, cex=1.6)
smoothScatter(x, y)
dev.off(dev.cur())
swirl()
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
5
12
abline(h=0.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
plot(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
plot(cx,cy,col=c("red", "orange", "purple"),pch=3,cex=2,lwd=2)
plot(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1(newClust))
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1m pch=8, cex=2, lwd=2)
points(newCx, newCy, col=cols1m, pch=8, cex=2, lwd=2)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(y, newClust2, mean)
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, 3)
kmObj$iter
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
q()
library("swirl")
swirl()
dim(ssd)
names(ssd[,562:563])
ssd$subject
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12], maxCon))
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
sub1[maxCon]
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers=6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers=6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walking <- which(kClust$size==49)
waldown <- which(kClust$size==49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
?hClust
?hclust
?kmeans
?impute
?impute.knn
library("impute")
install.packages("impute")
library("impute")
install.packages(impute)
install.packages("impute")
library(BiocInstaller)
install.packages("Bioconductor")
install.packages(Bioconductor)
source("https://bioconductor.org/biocLite.R")
biocLite("impute")
biocLite("impute")
library("BiocInstaller")
source("http://bioconductor.org/biocLite.R")
biocLite("impute")
library("impute")
?impute.knn
names(svd1)
dim(svd1$u)
dim(svd1$d)
dim(svd1$v)
length(svd1$d)
dim(diag(svd1$d))
dim(sub1)
svd1$u %*% svd1$u
t(svd1$u) %*% svd1$u
?matrix
A <- matrix(c(3, 1, 1,  -1, 3, 1), nrow=2, ncol=3)
A
A <- matrix(c(3, 1, 1,  -1, 3, 1), ncol=2, nrow=3)
A
A <- matrix(c(3, 1, 1,  -1, 3, 1), ncol=3, nrow=2)
A
A <- matrix(c(3, 1, 1,  -1, 3, 1), nrow=2, ncol=3, byrow=TRUE)
A
Asvd <= svd(A)
Asvd <- svd(A)
Asvd
Asvd$u %*% diag(Asvd$d) %*% t(Asvd$v)
t(Asvd$u) %*% Asvd$u
t(Asvd$v) %*% Asvd$v
?svd
library("swirl")
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,"|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.nan(x1))
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0,x0sub, pch=20)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0,d1,by=state)
mrg <- merge(d0, d1, by="state")
dim(mrg)
head(mrg)
with(mrg, rep(1,52), mrg[,2], xlim=c(.5,2.5))
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, plot(rep(2,52), mrg[,3]))
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
q()
setwd("C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1")
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
device()
dev.cur()
dev.off()
dev.cur()
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
dev.cur()
?legend
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
dev.cur()
dev.off()
dev.cur()
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
source('C:/Users/Costanzo Di Maria/Google Drive/L03 - Courses/John Hopkins University - Data Science/Module 05 - Reproducible Research (September 2017)/project week 1/figures_code.R')
str(data$Provider.State)
setwd("./RepData_PeerAssessment1")
getwd()
setwd("../project week 2/RepData_PeerAssessment1")
dir()
fileName <- "activity.zip"
rm(list=ls())
fileName <- "activity.zip"
data <- read.csv(fileName)
data <- read.table(fileName, sep=",")
?read.table
data <- read.table(fileName, sep=",", header=TRUE)
View(data)
data <- read.table(fileName, sep=",", header=TRUE, fileEncoding="UTF-16")
data <- read.csv(fileName)
data <- read.csv(fileName, header=T)
fileName <- "activity.csv"
data <- read.csv(fileName, header=T)
?read.csv
data <- read.csv("activity.zip", header=T)
data <- read.csv(unz("activity.zip"), header=T)
data <- read.csv(unz(filename="activity.zip"), header=T)
data <- read.csv(unzip(filename="activity.zip"), header=T)
?unzip
data <- read.csv(unzip("activity.zip"), header=T)
dim(data)
plot(data$interval)
sum(data$interval==5)
sum(data$interval==0)
sum(data$interval==10)
max(data$interval)
2355*61
sum(data$interval==2355)
unique(data$interval)
length(unique(data$interval))
288*2355
sum(is.na(data$steps))
str(data)
?as.Date
head(as.Date(data$date))
data$date <- as.Date(data$date)
str(data)
?tapply
steps_per_day <- tapply(data$steps, data$date, sum)
unique(data$date)
length(unique(data$date))
?sum
hist(steps_per-Day)
hist(steps_per_day)
steps_per_day <- tapply(data$steps, data$date, sum, na.rm=TRUE)
hist(steps_per_day)
mean(steps_per_day)
median(steps_per_day)
steps_by_interval <- tapply(data$steps, data$interval, mean, na.rm=TRUE)
intervals <- unique(data$intervals)
intervals <- unique(data$interval)
plot(intervals, steps_by_interval, type="l")
?which.max(steps_by_interval)
which.max(steps_by_interval)
max(steps_by_interval)
intervals(835)
intervals[835]
intervals[104]
summary(intervals)
?which.max
x <- which.max(steps_by_interval)
x
print(x)
max(steps_by_interval)
which(steps_by_interval==206.1698)
which(steps_by_interval==max(steps_by_interval))
x
x[1]
x[2]
str(x)
names(x)
x$835
x$"835"
names(steps_by_interval)
as.numeric(names(steps_by_interval))
sum(unique(data$interval))
length(unique(data$interval))
dim(data)
dim(data)[1]
names(steps_by_interval)
steps_by_interval[0]
steps_by_interval[835]
steps_by_interval$835
steps_by_interval[1]
steps_by_interval[["835"]]
idx <- as.character(data$interval[1])
idx
steps_by_interval[idx]
steps_by_interval[[idx]]
knitr::opts_chunk$set(echo = TRUE)
n_missing_values <- sum(is.na(data$steps))
# Replace missing value using the mean value for the corresponding 5-minute interval.
data_imputed <- data
n_rows <- dim(data)[1]
for (i in 1:n_rows){
if (is.na(data$steps[i])){
interval_name <- as.character(data$interval[i])
data_imputed$steps[i] <- steps_by_interval[[interval_name]]
}
}
steps_per_day_imputed <- tapply(data_imputed$steps, data_imputed$date, sum)
hist(steps_per_day_imputed)
mean_steps_imputed <- mean(steps_per_day_imputed)
median_steps_imputed <- median(steps_per_day_imputed)
knitr::opts_chunk$set(echo = TRUE)
fileName <- "activity.zip"
data <- read.csv(unzip(fileName), header=TRUE)
data$date <- as.Date(data$date)
steps_per_day <- tapply(data$steps, data$date, sum, na.rm=TRUE)
hist(steps_per_day)
mean_steps <- mean(steps_per_day)
median_steps <- median(steps_per_day)
sum(is.na(data_imputed$steps))
hist(steps_per_day_imputed)
round(steps_per_day_imputed)
round(mean_steps_imputed)
round(mean(steps_per_day_imputed))
?round
unlink('mod5_prjw2_cache', recursive = TRUE)
?format
?weekdays
w <- weekdays(data$date)
unique(w)
is_weekend <- w in c("Saturday", "Sunday")
is_weekend <- w %in% c("Saturday", "Sunday")
data <- data.frame(data, is_weekend=is_weekend)
q()
